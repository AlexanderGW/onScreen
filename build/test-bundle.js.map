{"version":3,"file":"test-bundle.js","sources":["../lib/insideViewport.js","../lib/scrollHandler.js","../lib/observeDOM.js","../lib/index.js","../test/index_test.js"],"sourcesContent":["\n/**\n * Checks an element's position in respect to the viewport\n * and determines wether it's inside the viewport.\n *\n * @param {node} element The DOM node you want to check\n */\nfunction insideViewport(el, options = { tolerance: 0 }) {\n    var rect = el.getBoundingClientRect();\n\n    return (\n        rect.bottom - options.tolerance > 0 &&\n        rect.right - options.tolerance > 0 &&\n        rect.left + options.tolerance < (window.innerWidth ||\n        document.documentElement.clientWidth) &&\n        rect.top + options.tolerance < (window.innerHeight ||\n        document.documentElement.clientHeight)\n    );\n}\n\nexport default insideViewport;\n","import insideViewport from './insideViewport';\n\nexport default function eventHandler(trackedElements, options) {\n    const selectors = Object.keys(trackedElements);\n\n    if (!selectors.length) return;\n\n    selectors.forEach((selector) => {\n        trackedElements[selector].nodes.forEach((item) => {\n            if (insideViewport(item.node, options)) {\n                item.wasVisible = item.isVisible;\n                item.isVisible = true;\n            } else {\n                item.wasVisible = item.isVisible;\n                item.isVisible = false;\n            }\n            if (item.isVisible === true && item.wasVisible === false) {\n                if (typeof trackedElements[selector].enter === 'function') {\n                    trackedElements[selector].enter(item.node);\n                }\n            }\n            if (item.isVisible === false && item.wasVisible === true) {\n                if (typeof trackedElements[selector].leave === 'function') {\n                    trackedElements[selector].leave(item.node);\n                }\n            }\n        });\n    });\n}\n","const observeDOM = (function observeDOM() {\n    const MutationObserver = window.MutationObserver || window.WebKitMutationObserver;\n    const eventListenerSupported = window.addEventListener;\n\n    return function observer(obj, callback) {\n        if (MutationObserver) {\n            // define a new observer\n            const obs = new MutationObserver((mutations) => {\n                if (mutations[0].addedNodes.length || mutations[0].removedNodes.length) callback();\n            });\n            // have the observer observe foo for changes in children\n            obs.observe(obj, {\n                childList: true,\n                subtree: true\n            });\n        } else if (eventListenerSupported) {\n            obj.addEventListener('DOMNodeInserted', callback, false);\n            obj.addEventListener('DOMNodeRemoved', callback, false);\n        }\n    };\n}());\n\nexport default observeDOM;\n","import scrollHandler from './scrollHandler';\nimport observeDOM from './observeDOM';\n\nexport default class OnScreen {\n    constructor(options = { tolerance: 0, debounce: 100 }) {\n        this.options = options;\n        this.trackedElements = {};\n        this.attached = false;\n\n        if (!this.options.tolerance) {\n            this.options.tolerance = 0;\n        }\n\n        if (!this.options.debounce) {\n            this.options.debounce = 100;\n        }\n\n        this.scroll = this.debouncedScroll.call(this);\n        this.attach();\n\n        // Observe DOM changes and start tracking newly added nodes\n        observeDOM(document.querySelector('body'), () => {\n            Object.keys(this.trackedElements).forEach((element) => {\n                this.on('enter', element);\n                this.on('leave', element);\n            });\n        });\n    }\n\n    /**\n     * Debounces the scroll event to avoid performance issues\n     *\n     * @return {void}\n     */\n    debouncedScroll() {\n        var timeout;\n\n        return () => {\n            clearTimeout(timeout);\n\n            timeout = setTimeout(() => {\n                scrollHandler(this.trackedElements, this.options);\n            }, this.options.throttle);\n        };\n    }\n\n    /**\n     * Attaches the scroll event handler\n     *\n     * @return {void}\n     */\n    attach() {\n        window.addEventListener('scroll', this.scroll);\n        window.addEventListener('resize', this.scroll);\n        this.attached = true;\n    }\n\n    /**\n     * Removes the scroll event handler\n     *\n     * @return {void}\n     */\n    destroy() {\n        window.removeEventListener('scroll', this.scroll);\n        window.removeEventListener('resize', this.scroll);\n        this.attached = false;\n    }\n\n    /**\n     * Starts tracking elements matching a CSS selector\n     *\n     * @param {string} event The event you want to track (enter or leave)\n     * @param {string} selector The element you want to track\n     * @param {function} callback The callback function to handle the event\n     * @return {void}\n     */\n    on(event, selector, callback) {\n        const allowed = ['enter', 'leave'];\n\n        if (!event) throw new Error('No event given. Choose either enter or leave');\n        if (!selector) throw new Error('No selector to track');\n        if (allowed.indexOf(event) < 0) throw new Error(`${event} event is not supported`);\n\n        if (!this.trackedElements.hasOwnProperty(selector)) {\n            this.trackedElements[selector] = {};\n        }\n\n        this.trackedElements[selector].nodes = [];\n\n        Array.from(document.querySelectorAll(selector)).forEach((node) => {\n            const item = {\n                isVisible: false,\n                wasVisible: false,\n                node\n            };\n\n            this.trackedElements[selector].nodes.push(item);\n        });\n\n        if (typeof this.trackedElements[selector][event] === 'function' &&\n            typeof callback === 'function') {\n            console.warn(`${selector}'s ${event} callback was overridden`);\n        }\n\n        if (typeof callback === 'function') {\n            this.trackedElements[selector][event] = callback;\n        }\n    }\n\n    /**\n     * Stops tracking elements matching a CSS selector\n     *\n     * @param {string} event The event you want to stop tracking (enter or leave)\n     * @param {string} selector The CSS selector you want to stop tracking\n     * @return {void}\n     */\n    off(event, selector) {\n        if (this.trackedElements.hasOwnProperty(selector)) {\n            if (this.trackedElements[selector][event]) {\n                delete this.trackedElements[selector][event];\n            } else {\n                console.warn(`${selector} had no ${event} callback defined`);\n            }\n        }\n    }\n}\n","import { expect } from 'chai';\nimport OnScreen from '../lib/index';\n\ndescribe('Instantiation', () => {\n    it('should create an instance with default settings', () => {\n        const instance = new OnScreen();\n\n        expect(instance.options.tolerance).to.equal(0);\n        expect(instance.options.debounce).to.equal(100);\n    });\n\n    it('should create an instance with custom settings', () => {\n        const instance = new OnScreen({\n            tolerance: 50,\n            debounce: 50\n        });\n\n        expect(instance.options.tolerance).to.equal(50);\n        expect(instance.options.debounce).to.equal(50);\n    });\n});\n\ndescribe('Tracking', () => {\n    let instance;\n\n    beforeEach((done) => {\n        instance = new OnScreen();\n        done();\n    });\n\n    it('should provide an enter callback', () => {\n        instance.on('enter', '.target', () => {});\n\n        expect(typeof instance.trackedElements['.target'].enter).to.equal('function');\n    });\n\n    it('should provide an leave callback', () => {\n        instance.on('leave', '.target', () => {});\n\n        expect(typeof instance.trackedElements['.target'].leave).to.equal('function');\n    });\n\n    it('should have found DOM nodes to work with', () => {\n        instance.on('enter', '.target', () => {});\n\n        expect(instance.trackedElements['.target']).to.have.property('nodes').with.length(2);\n    });\n\n    it('should track newly added DOM elements', () => {\n        let div = document.createElement('div');\n\n        div.classList.add('target');\n        instance.on('enter', '.target', () => {});\n\n        expect(instance.trackedElements['.target']).to.have.property('nodes').with.length(2);\n\n        document.querySelector('body').appendChild(div);\n        expect(instance.trackedElements['.target']).to.have.property('nodes').with.length(3);\n    });\n});\n\ndescribe('Scroll binding', () => {\n    let instance;\n\n    beforeEach((done) => {\n        instance = new OnScreen();\n        done();\n    });\n\n    it('should add a scroll event listener', () => {\n        expect(instance.attached).to.equal(true);\n    });\n\n    it('should be able to remove the event listener', () => {\n        instance.destroy();\n        expect(instance.attached).to.equal(false);\n    });\n});\n"],"names":[],"mappings":"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"}